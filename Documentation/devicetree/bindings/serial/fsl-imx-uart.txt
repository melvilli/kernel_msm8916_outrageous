<<<<<<< HEAD
<<<<<<< HEAD
* Freescale i.MX UART controller

Required properties:
- compatible : should be "fsl,imx21-uart"
- reg : Address and length of the register set for the device
- interrupts : Should contain UART interrupt number

Optional properties:
- fsl,uart-has-rtscts: indicate that RTS/CTS signals are used
=======
=======
>>>>>>> v3.18
* Freescale i.MX Universal Asynchronous Receiver/Transmitter (UART)

Required properties:
- compatible : Should be "fsl,<soc>-uart"
- reg : Address and length of the register set for the device
- interrupts : Should contain uart interrupt

Optional properties:
- fsl,uart-has-rtscts : Indicate the uart has rts and cts
- fsl,irda-mode : Indicate the uart supports irda mode
- fsl,dte-mode : Indicate the uart works in DTE mode. The uart works
                  is DCE mode by default.
<<<<<<< HEAD
>>>>>>> v3.18
=======
>>>>>>> v3.18

Note: Each uart controller should have an alias correctly numbered
in "aliases" node.

Example:

<<<<<<< HEAD
<<<<<<< HEAD
- From imx51.dtsi:
aliases {
	serial0 = &uart1;
	serial1 = &uart2;
	serial2 = &uart3;
=======
aliases {
	serial0 = &uart1;
>>>>>>> v3.18
=======
aliases {
	serial0 = &uart1;
>>>>>>> v3.18
};

uart1: serial@73fbc000 {
	compatible = "fsl,imx51-uart", "fsl,imx21-uart";
	reg = <0x73fbc000 0x4000>;
	interrupts = <31>;
<<<<<<< HEAD
<<<<<<< HEAD
	status = "disabled";
}

- From imx51-babbage.dts:
uart1: serial@73fbc000 {
	fsl,uart-has-rtscts;
	status = "okay";
};

=======
	fsl,uart-has-rtscts;
	fsl,dte-mode;
};
>>>>>>> v3.18
=======
	fsl,uart-has-rtscts;
	fsl,dte-mode;
};
>>>>>>> v3.18
